<!-- Wrap everything in a main-content div for Turbo Stream replacement -->
<div id="main-content">
<div class="max-w-3xl mx-auto p-4 sm:p-6 lg:p-8 bg-white shadow-lg rounded-lg">
  <div class="mb-8 text-center">
    <h1 class="text-2xl sm:text-3xl font-bold text-gray-800">Job Fit Analysis</h1>
    <p class="mt-2 text-gray-600">Upload a job description to see how Maxwell's skills match the requirements</p>
  </div>
  
  <% if @job_description.errors.any? %>
    <div class="bg-red-50 border border-red-200 text-red-800 rounded-md p-4 mb-6">
      <h2 class="text-lg font-semibold">Please fix the following issues:</h2>
      <ul class="list-disc pl-5 mt-2">
        <% @job_description.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <%= form_with(model: @job_description, url: analyze_job_description_path, class: "space-y-6", html: { multipart: true, id: "job-description-form" }) do |form| %>
    <div>
      <%= form.label :title, "Job Title", class: "block text-sm font-medium text-gray-700" %>
      <div class="mt-1">
        <%= form.text_field :title, class: "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md", placeholder: "Senior Ruby on Rails Developer" %>
      </div>
      <p class="mt-1 text-sm text-gray-500">Enter the title of the job position</p>
    </div>

    <div>
      <%= form.label :company, "Company Name", class: "block text-sm font-medium text-gray-700" %>
      <div class="mt-1">
        <%= form.text_field :company, class: "shadow-sm focus:ring-teal-500 focus:border-teal-500 block w-full sm:text-sm border-gray-300 rounded-md", placeholder: "Acme Corporation" %>
      </div>
      <p class="mt-1 text-sm text-gray-500">Enter the name of the company offering the position</p>
    </div>

    <div>
      <%= form.label :document, "Job Description Document", class: "block text-sm font-medium text-gray-700" %>
      <div id="upload-container" class="mt-1 flex justify-center px-6 pt-5 pb-6 border-2 border-gray-300 border-dashed rounded-md relative">
        <div class="space-y-1 text-center">
          <svg id="upload-icon" class="mx-auto h-12 w-12 text-gray-400" stroke="currentColor" fill="none" viewBox="0 0 48 48" aria-hidden="true">
            <path d="M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />
          </svg>
          <div id="upload-text" class="flex text-sm text-gray-600 justify-center">
            <label for="job_description_document" class="relative cursor-pointer bg-white rounded-md font-medium text-teal-600 hover:text-teal-500 focus-within:outline-none focus-within:ring-2 focus-within:ring-offset-2 focus-within:ring-teal-500">
              <span>Upload a file</span>
              <%= form.file_field :document, class: "sr-only", accept: ".pdf,.doc,.docx,.txt" %>
            </label>
            <p class="pl-1">or drag and drop</p>
          </div>
          <p id="file-info" class="text-xs text-gray-500">PDF, Word, or text file up to 10MB</p>
        </div>
        
        <!-- Selected file indicator (hidden by default) -->
        <div id="file-selected" class="hidden absolute inset-0 bg-gray-50 flex items-center justify-center flex-col rounded-md">
          <svg class="h-10 w-10 text-teal-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
          <p class="mt-2 text-sm font-medium text-gray-900">File selected:</p>
          <p id="selected-filename" class="text-sm text-gray-600">filename.pdf</p>
          <button id="change-file" type="button" class="mt-2 text-xs text-teal-600 hover:text-teal-500">Change file</button>
        </div>
      </div>
    </div>

    <%= form.hidden_field :session_id, value: session.id %>

    <div class="flex justify-center">
      <%= form.submit "Analyze Job Fit", id: "submit-button", class: "inline-flex items-center px-4 py-2 border border-transparent text-base font-medium rounded-md shadow-sm text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500", data: { turbo: true } %>
    </div>
  <% end %>
  
  <div class="mt-8 border-t border-gray-200 pt-6">
    <div class="text-center">
      <p class="text-sm text-gray-500">Need to go back? <%= link_to "Return to resume", root_path, class: "font-medium text-teal-600 hover:text-teal-500" %></p>
    </div>
  </div>
</div>
</div>

<!-- Loading overlay -->
<div id="loading-overlay" class="fixed inset-0 bg-gray-900 bg-opacity-50 hidden z-50 items-center justify-center">
  <div class="bg-white p-6 rounded-lg shadow-xl max-w-md mx-auto text-center">
    <div class="animate-spin rounded-full h-16 w-16 border-t-4 border-teal-500 border-opacity-100 border-b-4 mx-auto"></div>
    <p class="mt-4 text-lg font-medium text-gray-900">Analyzing document...</p>
    <p class="mt-2 text-sm text-gray-600">This may take 15-20 seconds. Please don't close this page.</p>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const fileInput = document.getElementById('job_description_document');
  const fileInfo = document.getElementById('file-info');
  const fileSelected = document.getElementById('file-selected');
  const selectedFilename = document.getElementById('selected-filename');
  const uploadContainer = document.getElementById('upload-container');
  const changeFileBtn = document.getElementById('change-file');
  const form = document.getElementById('job-description-form');
  const loadingOverlay = document.getElementById('loading-overlay');
  
  if (fileInput) {
    // Handle file selection
    fileInput.addEventListener('change', function() {
      const file = this.files[0];
      if (file) {
        // Show the selected file indicator
        selectedFilename.textContent = file.name;
        fileSelected.classList.remove('hidden');
        
        // Add a class to the container to indicate a file is selected
        uploadContainer.classList.add('border-teal-500');
        uploadContainer.classList.remove('border-gray-300');
      }
    });
    
    // Handle change file button
    if (changeFileBtn) {
      changeFileBtn.addEventListener('click', function(e) {
        e.preventDefault();
        fileInput.value = '';
        fileSelected.classList.add('hidden');
        uploadContainer.classList.remove('border-teal-500');
        uploadContainer.classList.add('border-gray-300');
        fileInfo.textContent = 'PDF, Word, or text file up to 10MB';
      });
    }
  }
  
  // Show loading overlay on form submission
  if (form) {
    form.addEventListener('submit', function() {
      // Validate the form first
      if (this.checkValidity()) {
        // Show loading overlay
        loadingOverlay.classList.remove('hidden');
        loadingOverlay.classList.add('flex');
        loadingOverlay.style.display = 'flex';
        
        // Disable the submit button to prevent double submission
        document.getElementById('submit-button').disabled = true;
      }
    });
    
    // Listen for turbo:submit-end to handle when the form has been processed
    document.addEventListener('turbo:submit-end', function() {
      // Hide loading overlay
      if (loadingOverlay) {
        loadingOverlay.classList.add('hidden');
        loadingOverlay.classList.remove('flex');
        loadingOverlay.style.display = 'none';
      }
      
      // Re-enable the submit button
      const submitButton = document.getElementById('submit-button');
      if (submitButton) {
        submitButton.disabled = false;
      }
    });
    
    // Also listen for turbo:load to ensure loader is hidden after page loads
    document.addEventListener('turbo:load', function() {
      // Hide loading overlay
      if (loadingOverlay) {
        loadingOverlay.classList.add('hidden');
        loadingOverlay.classList.remove('flex');
        loadingOverlay.style.display = 'none';
      }
    });
  }
});
</script>
